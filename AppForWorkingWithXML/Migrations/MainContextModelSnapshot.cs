// <auto-generated />
using System;
using AppForWorkingWithXML.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppForWorkingWithXML.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.AddressObjectTypesAddressObjectType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AddressObjectTypes");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.AddressObjectsObject", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("ChangeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("IsActual")
                        .HasColumnType("int");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("NextId")
                        .HasColumnType("bigint");

                    b.Property<bool>("NextIdSpecified")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ObjectId")
                        .HasColumnType("bigint");

                    b.Property<int>("OperTypeId")
                        .HasColumnType("int");

                    b.Property<long?>("PrevId")
                        .HasColumnType("bigint");

                    b.Property<bool>("PrevIdSpecified")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AddressObjects");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.ApartmentTypesApartmentType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ApartmentTypes");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.ApartmentsApartment", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int>("ApartType")
                        .HasColumnType("int");

                    b.Property<long>("ChangeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("IsActual")
                        .HasColumnType("int");

                    b.Property<long?>("NextId")
                        .HasColumnType("bigint");

                    b.Property<bool>("NextIdSpecified")
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ObjectGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ObjectId")
                        .HasColumnType("bigint");

                    b.Property<long>("OperTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PrevId")
                        .HasColumnType("bigint");

                    b.Property<bool>("PrevIdSpecified")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.AsAddrObjDivisionItemsItem", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("ChangeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ChildId")
                        .HasColumnType("bigint");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("AsAddrObjDivisionItems");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.AsAdmHierarchyItemsItem", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("AreaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ChangeId")
                        .HasColumnType("bigint");

                    b.Property<string>("CityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<long?>("NextId")
                        .HasColumnType("bigint");

                    b.Property<bool>("NextIdSpecified")
                        .HasColumnType("bit");

                    b.Property<long>("ObjectId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentObjId")
                        .HasColumnType("bigint");

                    b.Property<bool>("ParentObjIdSpecified")
                        .HasColumnType("bit");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PrevId")
                        .HasColumnType("bigint");

                    b.Property<bool>("PrevIdSpecified")
                        .HasColumnType("bit");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StreetCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AsAdmHierarchyItems");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.AsChangeHistoryItemsItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("AdrObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ChangeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("NDocId")
                        .HasColumnType("bigint");

                    b.Property<bool>("NDocIdSpecified")
                        .HasColumnType("bit");

                    b.Property<long>("ObjectId")
                        .HasColumnType("bigint");

                    b.Property<int>("OperTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AsChangeHistoryItems");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.AsMunHierarchyItemsItem", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("ChangeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<long?>("NextId")
                        .HasColumnType("bigint");

                    b.Property<bool>("NextIdSpecified")
                        .HasColumnType("bit");

                    b.Property<long>("ObjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Oktmo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ParentObjId")
                        .HasColumnType("bigint");

                    b.Property<bool>("ParentObjIdSpecified")
                        .HasColumnType("bit");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PrevId")
                        .HasColumnType("bigint");

                    b.Property<bool>("PrevIdSpecified")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AsMunHierarchyItems");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.CarplacesCarplace", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("ChangeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("IsActual")
                        .HasColumnType("int");

                    b.Property<long?>("NextId")
                        .HasColumnType("bigint");

                    b.Property<bool>("NextIdSpecified")
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ObjectGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ObjectId")
                        .HasColumnType("bigint");

                    b.Property<int>("OperTypeId")
                        .HasColumnType("int");

                    b.Property<long?>("PrevId")
                        .HasColumnType("bigint");

                    b.Property<bool>("PrevIdSpecified")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Carplaces");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.HouseTypesHouseType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("HouseTypes");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.HousesHouse", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("AddNum1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddNum2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AddType1")
                        .HasColumnType("int");

                    b.Property<int?>("AddType2")
                        .HasColumnType("int");

                    b.Property<long>("ChangeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HouseNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HouseType")
                        .HasColumnType("int");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("IsActual")
                        .HasColumnType("int");

                    b.Property<long?>("NextId")
                        .HasColumnType("bigint");

                    b.Property<bool>("NextIdSpecified")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ObjectId")
                        .HasColumnType("bigint");

                    b.Property<int>("OperTypeId")
                        .HasColumnType("int");

                    b.Property<long?>("PrevId")
                        .HasColumnType("bigint");

                    b.Property<bool>("PrevIdSpecified")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.NormativeDocsKind", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NormativeDocsKinds");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.NormativeDocsNormativeDoc", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("AccDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("AccDateSpecified")
                        .HasColumnType("bit");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("RegDateSpecified")
                        .HasColumnType("bit");

                    b.Property<string>("RegNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NormativeDocs");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.NormativeDocsType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NormativeDocsTypes");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.ObjectLevelsObjectLevel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ObjectLevels");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.OperationTypesOperationType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OperationTypes");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.ParamTypesParamType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ParamTypes");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.ParamsParam", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("ChangeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ChangeIdEnd")
                        .HasColumnType("bigint");

                    b.Property<bool>("ChangeIdSpecified")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ObjectId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Params");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.ReestrObjectsObject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ChangeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("LevelId")
                        .HasColumnType("int");

                    b.Property<Guid>("ObjectGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ObjectId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ReestrObjects");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.RoomTypesRoomType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.RoomsRoom", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("ChangeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("IsActual")
                        .HasColumnType("int");

                    b.Property<long?>("NextId")
                        .HasColumnType("bigint");

                    b.Property<bool>("NextIdSpecified")
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ObjectGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ObjectId")
                        .HasColumnType("bigint");

                    b.Property<int>("OperTypeId")
                        .HasColumnType("int");

                    b.Property<long?>("PrevId")
                        .HasColumnType("bigint");

                    b.Property<bool>("PrevIdSpecified")
                        .HasColumnType("bit");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("AppForWorkingWithXML.Models.Entities.SteadsStead", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("ChangeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("IsActual")
                        .HasColumnType("int");

                    b.Property<long?>("NextId")
                        .HasColumnType("bigint");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ObjectGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ObjectId")
                        .HasColumnType("bigint");

                    b.Property<int>("OperTypeId")
                        .HasColumnType("int");

                    b.Property<long?>("PrevId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Steads");
                });
#pragma warning restore 612, 618
        }
    }
}
